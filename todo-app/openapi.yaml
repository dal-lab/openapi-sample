openapi: 3.0.3
info:
  title: To-do service API
  description: |-
    간단한 할 일 관리 서비스의 API
  version: 1.0.0
servers:
  - url: http://localhost:8080
tags:
  - name: API
    description: 기본적인 API
paths:
  /:
    get:
      tags:
        - API
      summary: Health cehck
      description: |
        API 서버가 잘 작동하는지 확인하는 용도의 API.
      responses:
        '200':
          description: 서버가 정상 작동함
  /tasks:
    get:
      tags:
        - API
      summary: Get all tasks
      description: |
        할 일 목록을 얻는다.
      responses:
        '200':
          description: 할 일 목록을 올바르게 얻음.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Task의 식별자
                          example: 01BX5ZZKBKACTAV9WEVGEMMVRY
                        title:
                          type: string
                          description: 할 일에 대한 간단한 설명
                          example: 과제하기
                        createdAt:
                          type: string
                          description: 할 일 등록 일시 (UTC)
                          example: "2024-10-01 12:34:56"
        post:
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    contents:
                      type: string
                      description: 내용
                      example: "오늘 할 일"
          responses:
            200:
              description: Task 저장 결과
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      id:
                        type: number
                        description: 저장 된 id 값
                        example: 1
                      contents:
                        type: string
                        description: 내용
                        example: "오늘 할 일"
            400:
              description: 잘못된 입력 형식
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      error:
                        type: string
                        example: "문자열 타입이 아닙니다."
    /tasks/{taskId}:
      get:
        parameters:
          - name: taskId
            in: path
            required: true
            schema:
              type: string
        responses:
          200:
            description: Task 목록 조회
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Task'
      patch:
        parameters:
          - name: taskId
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  contents:
                    type: string
                    description: 내용
                    example: "내일 할 일"
        responses:
          200:
            description: Task 수정 결과
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: number
                      description: 저장 된 id 값
                      example: 1
                    contents:
                      type: string
                      description: 내용
                      example: "내일 할 일"
      delete:
        parameters:
          - name: taskId
            in: path
            required: true
            schema:
              type: string
        responses:
          200:
            description: Task 삭제 결과
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
                      description: 삭제 성공
                      example: "success"
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
